// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pad.proto

package PadPlusServer

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ApiType int32

const (
	ApiType_GET_QRCODE              ApiType = 0
	ApiType_RECONNECT               ApiType = 1
	ApiType_LOGOUT                  ApiType = 2
	ApiType_INIT                    ApiType = 3
	ApiType_STOP                    ApiType = 4
	ApiType_CLOSE                   ApiType = 5
	ApiType_HEARTBEAT               ApiType = 6
	ApiType_GET_CONTACT             ApiType = 10
	ApiType_SEARCH_CONTACT          ApiType = 11
	ApiType_ADD_CONTACT             ApiType = 12
	ApiType_ACCEPT_CONTACT          ApiType = 13
	ApiType_SYNC_CONTACT            ApiType = 14
	ApiType_CONTACT_ALIAS           ApiType = 15
	ApiType_ADD_CHATROOM_CONTACT    ApiType = 16
	ApiType_GET_CONTACT_SELF_INFO   ApiType = 17
	ApiType_SET_CONTACT_SELF_INFO   ApiType = 18
	ApiType_GET_CONTACT_SELF_QRCODE ApiType = 19
	ApiType_GET_ROOM_MEMBER         ApiType = 30
	ApiType_ROOM_OPERATION          ApiType = 31
	ApiType_CREATE_ROOM             ApiType = 32
	ApiType_SET_ROOM_ANNOUNCEMENT   ApiType = 33
	ApiType_GET_ROOM_ANNOUNCEMENT   ApiType = 34
	ApiType_GET_ROOM_QRCODE         ApiType = 35
	ApiType_ACCEPT_ROOM_INVITATION  ApiType = 36
	ApiType_SEND_MESSAGE            ApiType = 50
	ApiType_SEND_FILE               ApiType = 51
	ApiType_REVOKE_MESSAGE          ApiType = 52
	ApiType_GET_MESSAGE_MEDIA       ApiType = 53
	ApiType_GET_ALL_TAG             ApiType = 70
	ApiType_CREATE_TAG              ApiType = 71
	ApiType_ADD_TAG                 ApiType = 72
	ApiType_MODIFY_TAG              ApiType = 73
	ApiType_DELETE_TAG              ApiType = 74
)

var ApiType_name = map[int32]string{
	0:  "GET_QRCODE",
	1:  "RECONNECT",
	2:  "LOGOUT",
	3:  "INIT",
	4:  "STOP",
	5:  "CLOSE",
	6:  "HEARTBEAT",
	10: "GET_CONTACT",
	11: "SEARCH_CONTACT",
	12: "ADD_CONTACT",
	13: "ACCEPT_CONTACT",
	14: "SYNC_CONTACT",
	15: "CONTACT_ALIAS",
	16: "ADD_CHATROOM_CONTACT",
	17: "GET_CONTACT_SELF_INFO",
	18: "SET_CONTACT_SELF_INFO",
	19: "GET_CONTACT_SELF_QRCODE",
	30: "GET_ROOM_MEMBER",
	31: "ROOM_OPERATION",
	32: "CREATE_ROOM",
	33: "SET_ROOM_ANNOUNCEMENT",
	34: "GET_ROOM_ANNOUNCEMENT",
	35: "GET_ROOM_QRCODE",
	36: "ACCEPT_ROOM_INVITATION",
	50: "SEND_MESSAGE",
	51: "SEND_FILE",
	52: "REVOKE_MESSAGE",
	53: "GET_MESSAGE_MEDIA",
	70: "GET_ALL_TAG",
	71: "CREATE_TAG",
	72: "ADD_TAG",
	73: "MODIFY_TAG",
	74: "DELETE_TAG",
}

var ApiType_value = map[string]int32{
	"GET_QRCODE":              0,
	"RECONNECT":               1,
	"LOGOUT":                  2,
	"INIT":                    3,
	"STOP":                    4,
	"CLOSE":                   5,
	"HEARTBEAT":               6,
	"GET_CONTACT":             10,
	"SEARCH_CONTACT":          11,
	"ADD_CONTACT":             12,
	"ACCEPT_CONTACT":          13,
	"SYNC_CONTACT":            14,
	"CONTACT_ALIAS":           15,
	"ADD_CHATROOM_CONTACT":    16,
	"GET_CONTACT_SELF_INFO":   17,
	"SET_CONTACT_SELF_INFO":   18,
	"GET_CONTACT_SELF_QRCODE": 19,
	"GET_ROOM_MEMBER":         30,
	"ROOM_OPERATION":          31,
	"CREATE_ROOM":             32,
	"SET_ROOM_ANNOUNCEMENT":   33,
	"GET_ROOM_ANNOUNCEMENT":   34,
	"GET_ROOM_QRCODE":         35,
	"ACCEPT_ROOM_INVITATION":  36,
	"SEND_MESSAGE":            50,
	"SEND_FILE":               51,
	"REVOKE_MESSAGE":          52,
	"GET_MESSAGE_MEDIA":       53,
	"GET_ALL_TAG":             70,
	"CREATE_TAG":              71,
	"ADD_TAG":                 72,
	"MODIFY_TAG":              73,
	"DELETE_TAG":              74,
}

func (x ApiType) Enum() *ApiType {
	p := new(ApiType)
	*p = x
	return p
}

func (x ApiType) String() string {
	return proto.EnumName(ApiType_name, int32(x))
}

func (x *ApiType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ApiType_value, data, "ApiType")
	if err != nil {
		return err
	}
	*x = ApiType(value)
	return nil
}

func (ApiType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d3f50c3d2d31f6db, []int{0}
}

type ResponseType int32

const (
	ResponseType_REQUEST_RESPONSE        ResponseType = 0
	ResponseType_DISCONNECT              ResponseType = 1
	ResponseType_INVALID_TOKEN           ResponseType = 2
	ResponseType_LOGIN_QRCODE            ResponseType = 10
	ResponseType_QRCODE_SCAN             ResponseType = 11
	ResponseType_ACCOUNT_LOGIN           ResponseType = 12
	ResponseType_ACCOUNT_LOGOUT          ResponseType = 13
	ResponseType_QRCODE_LOGIN            ResponseType = 14
	ResponseType_AUTO_LOGIN              ResponseType = 15
	ResponseType_CONTACT_SELF_INFO_GET   ResponseType = 17
	ResponseType_CONTACT_SELF_INFO_SET   ResponseType = 18
	ResponseType_CONTACT_SELF_QRCODE_GET ResponseType = 19
	ResponseType_CONTACT_LIST            ResponseType = 20
	ResponseType_CONTACT_MODIFY          ResponseType = 21
	ResponseType_CONTACT_DELETE          ResponseType = 22
	ResponseType_ROOM_MEMBER_LIST        ResponseType = 23
	ResponseType_ROOM_MEMBER_MODIFY      ResponseType = 24
	ResponseType_CONTACT_SEARCH          ResponseType = 25
	ResponseType_CONTACT_ADD             ResponseType = 26
	ResponseType_ROOM_QRCODE             ResponseType = 27
	ResponseType_MESSAGE_RECEIVE         ResponseType = 30
	ResponseType_STATUS_NOTIFY           ResponseType = 31
	ResponseType_MESSAGE_MEDIA_SRC       ResponseType = 32
	ResponseType_MESSAGE_REVOKE          ResponseType = 33
	ResponseType_TAG_LIST                ResponseType = 40
	ResponseType_TAG_CREATE              ResponseType = 41
	ResponseType_TAG_ADD                 ResponseType = 42
	ResponseType_TAG_MODIFY              ResponseType = 43
	ResponseType_TAG_DELETE              ResponseType = 44
)

var ResponseType_name = map[int32]string{
	0:  "REQUEST_RESPONSE",
	1:  "DISCONNECT",
	2:  "INVALID_TOKEN",
	10: "LOGIN_QRCODE",
	11: "QRCODE_SCAN",
	12: "ACCOUNT_LOGIN",
	13: "ACCOUNT_LOGOUT",
	14: "QRCODE_LOGIN",
	15: "AUTO_LOGIN",
	17: "CONTACT_SELF_INFO_GET",
	18: "CONTACT_SELF_INFO_SET",
	19: "CONTACT_SELF_QRCODE_GET",
	20: "CONTACT_LIST",
	21: "CONTACT_MODIFY",
	22: "CONTACT_DELETE",
	23: "ROOM_MEMBER_LIST",
	24: "ROOM_MEMBER_MODIFY",
	25: "CONTACT_SEARCH",
	26: "CONTACT_ADD",
	27: "ROOM_QRCODE",
	30: "MESSAGE_RECEIVE",
	31: "STATUS_NOTIFY",
	32: "MESSAGE_MEDIA_SRC",
	33: "MESSAGE_REVOKE",
	40: "TAG_LIST",
	41: "TAG_CREATE",
	42: "TAG_ADD",
	43: "TAG_MODIFY",
	44: "TAG_DELETE",
}

var ResponseType_value = map[string]int32{
	"REQUEST_RESPONSE":        0,
	"DISCONNECT":              1,
	"INVALID_TOKEN":           2,
	"LOGIN_QRCODE":            10,
	"QRCODE_SCAN":             11,
	"ACCOUNT_LOGIN":           12,
	"ACCOUNT_LOGOUT":          13,
	"QRCODE_LOGIN":            14,
	"AUTO_LOGIN":              15,
	"CONTACT_SELF_INFO_GET":   17,
	"CONTACT_SELF_INFO_SET":   18,
	"CONTACT_SELF_QRCODE_GET": 19,
	"CONTACT_LIST":            20,
	"CONTACT_MODIFY":          21,
	"CONTACT_DELETE":          22,
	"ROOM_MEMBER_LIST":        23,
	"ROOM_MEMBER_MODIFY":      24,
	"CONTACT_SEARCH":          25,
	"CONTACT_ADD":             26,
	"ROOM_QRCODE":             27,
	"MESSAGE_RECEIVE":         30,
	"STATUS_NOTIFY":           31,
	"MESSAGE_MEDIA_SRC":       32,
	"MESSAGE_REVOKE":          33,
	"TAG_LIST":                40,
	"TAG_CREATE":              41,
	"TAG_ADD":                 42,
	"TAG_MODIFY":              43,
	"TAG_DELETE":              44,
}

func (x ResponseType) Enum() *ResponseType {
	p := new(ResponseType)
	*p = x
	return p
}

func (x ResponseType) String() string {
	return proto.EnumName(ResponseType_name, int32(x))
}

func (x *ResponseType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseType_value, data, "ResponseType")
	if err != nil {
		return err
	}
	*x = ResponseType(value)
	return nil
}

func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d3f50c3d2d31f6db, []int{1}
}

type RequestObject struct {
	Uin                  *string  `protobuf:"bytes,1,opt,name=uin" json:"uin,omitempty"`
	RequestId            *string  `protobuf:"bytes,10,opt,name=requestId" json:"requestId,omitempty"`
	Token                *string  `protobuf:"bytes,20,req,name=token" json:"token,omitempty"`
	ApiType              *ApiType `protobuf:"varint,30,req,name=apiType,enum=PadPlusServer.ApiType" json:"apiType,omitempty"`
	Params               *string  `protobuf:"bytes,40,opt,name=params" json:"params,omitempty"`
	TraceId              *string  `protobuf:"bytes,50,opt,name=traceId" json:"traceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestObject) Reset()         { *m = RequestObject{} }
func (m *RequestObject) String() string { return proto.CompactTextString(m) }
func (*RequestObject) ProtoMessage()    {}
func (*RequestObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3f50c3d2d31f6db, []int{0}
}

func (m *RequestObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestObject.Unmarshal(m, b)
}
func (m *RequestObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestObject.Marshal(b, m, deterministic)
}
func (m *RequestObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestObject.Merge(m, src)
}
func (m *RequestObject) XXX_Size() int {
	return xxx_messageInfo_RequestObject.Size(m)
}
func (m *RequestObject) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestObject.DiscardUnknown(m)
}

var xxx_messageInfo_RequestObject proto.InternalMessageInfo

func (m *RequestObject) GetUin() string {
	if m != nil && m.Uin != nil {
		return *m.Uin
	}
	return ""
}

func (m *RequestObject) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *RequestObject) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *RequestObject) GetApiType() ApiType {
	if m != nil && m.ApiType != nil {
		return *m.ApiType
	}
	return ApiType_GET_QRCODE
}

func (m *RequestObject) GetParams() string {
	if m != nil && m.Params != nil {
		return *m.Params
	}
	return ""
}

func (m *RequestObject) GetTraceId() string {
	if m != nil && m.TraceId != nil {
		return *m.TraceId
	}
	return ""
}

type ResponseObject struct {
	Result               *string  `protobuf:"bytes,10,req,name=result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseObject) Reset()         { *m = ResponseObject{} }
func (m *ResponseObject) String() string { return proto.CompactTextString(m) }
func (*ResponseObject) ProtoMessage()    {}
func (*ResponseObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3f50c3d2d31f6db, []int{1}
}

func (m *ResponseObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseObject.Unmarshal(m, b)
}
func (m *ResponseObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseObject.Marshal(b, m, deterministic)
}
func (m *ResponseObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseObject.Merge(m, src)
}
func (m *ResponseObject) XXX_Size() int {
	return xxx_messageInfo_ResponseObject.Size(m)
}
func (m *ResponseObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseObject.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseObject proto.InternalMessageInfo

func (m *ResponseObject) GetResult() string {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return ""
}

type InitConfig struct {
	Token                *string  `protobuf:"bytes,10,req,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitConfig) Reset()         { *m = InitConfig{} }
func (m *InitConfig) String() string { return proto.CompactTextString(m) }
func (*InitConfig) ProtoMessage()    {}
func (*InitConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3f50c3d2d31f6db, []int{2}
}

func (m *InitConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitConfig.Unmarshal(m, b)
}
func (m *InitConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitConfig.Marshal(b, m, deterministic)
}
func (m *InitConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitConfig.Merge(m, src)
}
func (m *InitConfig) XXX_Size() int {
	return xxx_messageInfo_InitConfig.Size(m)
}
func (m *InitConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_InitConfig.DiscardUnknown(m)
}

var xxx_messageInfo_InitConfig proto.InternalMessageInfo

func (m *InitConfig) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type StreamResponse struct {
	Uin                  *string       `protobuf:"bytes,1,opt,name=uin" json:"uin,omitempty"`
	RequestId            *string       `protobuf:"bytes,10,opt,name=requestId" json:"requestId,omitempty"`
	Data                 *string       `protobuf:"bytes,20,req,name=data" json:"data,omitempty"`
	ResponseType         *ResponseType `protobuf:"varint,30,req,name=responseType,enum=PadPlusServer.ResponseType" json:"responseType,omitempty"`
	TraceId              *string       `protobuf:"bytes,40,opt,name=traceId" json:"traceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3f50c3d2d31f6db, []int{3}
}

func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

func (m *StreamResponse) GetUin() string {
	if m != nil && m.Uin != nil {
		return *m.Uin
	}
	return ""
}

func (m *StreamResponse) GetRequestId() string {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return ""
}

func (m *StreamResponse) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func (m *StreamResponse) GetResponseType() ResponseType {
	if m != nil && m.ResponseType != nil {
		return *m.ResponseType
	}
	return ResponseType_REQUEST_RESPONSE
}

func (m *StreamResponse) GetTraceId() string {
	if m != nil && m.TraceId != nil {
		return *m.TraceId
	}
	return ""
}

func init() {
	proto.RegisterEnum("PadPlusServer.ApiType", ApiType_name, ApiType_value)
	proto.RegisterEnum("PadPlusServer.ResponseType", ResponseType_name, ResponseType_value)
	proto.RegisterType((*RequestObject)(nil), "PadPlusServer.RequestObject")
	proto.RegisterType((*ResponseObject)(nil), "PadPlusServer.ResponseObject")
	proto.RegisterType((*InitConfig)(nil), "PadPlusServer.InitConfig")
	proto.RegisterType((*StreamResponse)(nil), "PadPlusServer.StreamResponse")
}

func init() { proto.RegisterFile("pad.proto", fileDescriptor_d3f50c3d2d31f6db) }

var fileDescriptor_d3f50c3d2d31f6db = []byte{
	// 890 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x4f, 0x73, 0x1a, 0x37,
	0x14, 0x37, 0x0e, 0xb6, 0xc3, 0xb3, 0xc1, 0xb2, 0x8c, 0xc9, 0xda, 0x4e, 0x1d, 0x42, 0x7b, 0xa0,
	0x6e, 0xc7, 0x93, 0x71, 0xdb, 0x73, 0x47, 0xd9, 0x15, 0xa0, 0x66, 0x91, 0x88, 0x24, 0x3c, 0x93,
	0xd3, 0x0e, 0x0d, 0xdb, 0x8e, 0xdb, 0x04, 0x28, 0xe0, 0xce, 0xf4, 0xd3, 0xf4, 0x23, 0xf4, 0xdc,
	0x6b, 0xbf, 0x55, 0x6f, 0x9d, 0xa7, 0xd5, 0xc2, 0x12, 0xd2, 0x43, 0x6e, 0x7a, 0xbf, 0xf7, 0xff,
	0xb7, 0xbf, 0x95, 0xa0, 0x32, 0x1b, 0x8d, 0x6f, 0x66, 0xf3, 0xe9, 0x72, 0x4a, 0xab, 0x83, 0xd1,
	0x78, 0xf0, 0xee, 0x61, 0x61, 0xd2, 0xf9, 0xef, 0xe9, 0xbc, 0xf5, 0x77, 0x09, 0xaa, 0x3a, 0xfd,
	0xed, 0x21, 0x5d, 0x2c, 0xd5, 0x8f, 0xbf, 0xa4, 0x6f, 0x97, 0x94, 0xc0, 0xa3, 0x87, 0xfb, 0x49,
	0x50, 0x6a, 0x96, 0xda, 0x15, 0x8d, 0x47, 0xfa, 0x14, 0x2a, 0xf3, 0x2c, 0x44, 0x8c, 0x03, 0x70,
	0xf8, 0x1a, 0xa0, 0x75, 0xd8, 0x5b, 0x4e, 0x7f, 0x4d, 0x27, 0x41, 0xbd, 0xb9, 0xdb, 0xae, 0xe8,
	0xcc, 0xa0, 0x2f, 0xe0, 0x60, 0x34, 0xbb, 0xb7, 0x7f, 0xcc, 0xd2, 0xe0, 0xaa, 0xb9, 0xdb, 0xae,
	0xdd, 0x36, 0x6e, 0x36, 0x1a, 0xdf, 0xb0, 0xcc, 0xab, 0xf3, 0x30, 0xda, 0x80, 0xfd, 0xd9, 0x68,
	0x3e, 0x7a, 0xbf, 0x08, 0xda, 0xae, 0x85, 0xb7, 0x68, 0x00, 0x07, 0xcb, 0xf9, 0xe8, 0x6d, 0x2a,
	0xc6, 0xc1, 0xad, 0x73, 0xe4, 0x66, 0xab, 0x0d, 0x35, 0x9d, 0x2e, 0x66, 0xd3, 0xc9, 0x22, 0xf5,
	0xb3, 0x37, 0x60, 0x7f, 0x9e, 0x2e, 0x1e, 0xde, 0x2d, 0x03, 0x70, 0xc3, 0x78, 0xab, 0xd5, 0x02,
	0x10, 0x93, 0xfb, 0x65, 0x38, 0x9d, 0xfc, 0x74, 0xff, 0xf3, 0x7a, 0x62, 0x28, 0x4c, 0xdc, 0xfa,
	0xab, 0x04, 0x35, 0xb3, 0x9c, 0xa7, 0xa3, 0xf7, 0x79, 0xd1, 0x4f, 0xa6, 0x82, 0x42, 0x79, 0x3c,
	0x5a, 0x8e, 0x3c, 0x13, 0xee, 0x4c, 0xbf, 0x87, 0xa3, 0xb9, 0xaf, 0x57, 0x60, 0xe3, 0xf2, 0x03,
	0x36, 0x74, 0x21, 0x44, 0x6f, 0x24, 0x14, 0xf7, 0x6f, 0x6f, 0xec, 0x7f, 0xfd, 0x6f, 0x19, 0x0e,
	0x3c, 0x8d, 0xb4, 0x06, 0xd0, 0xe5, 0x36, 0x79, 0xad, 0x43, 0x15, 0x71, 0xb2, 0x43, 0xab, 0x50,
	0xd1, 0x3c, 0x54, 0x52, 0xf2, 0xd0, 0x92, 0x12, 0x05, 0xd8, 0x8f, 0x55, 0x57, 0x0d, 0x2d, 0xd9,
	0xa5, 0x8f, 0xa1, 0x2c, 0xa4, 0xb0, 0xe4, 0x11, 0x9e, 0x8c, 0x55, 0x03, 0x52, 0xa6, 0x15, 0xd8,
	0x0b, 0x63, 0x65, 0x38, 0xd9, 0xc3, 0xcc, 0x1e, 0x67, 0xda, 0xbe, 0xe4, 0xcc, 0x92, 0x7d, 0x7a,
	0x0c, 0x87, 0x58, 0x38, 0x54, 0xd2, 0xb2, 0xd0, 0x12, 0xa0, 0x14, 0x6a, 0x86, 0x33, 0x1d, 0xf6,
	0x56, 0xd8, 0x21, 0x06, 0xb1, 0x28, 0x5a, 0x01, 0x47, 0x18, 0xc4, 0xc2, 0x90, 0x0f, 0xd6, 0x89,
	0x55, 0x4a, 0xe0, 0xc8, 0xbc, 0x91, 0xe1, 0x0a, 0xa9, 0xd1, 0x13, 0xa8, 0x7a, 0x23, 0x61, 0xb1,
	0x60, 0x86, 0x1c, 0xd3, 0x00, 0xea, 0xae, 0x52, 0x8f, 0x59, 0xad, 0x54, 0x7f, 0x15, 0x4c, 0xe8,
	0x39, 0x9c, 0x15, 0x06, 0x49, 0x0c, 0x8f, 0x3b, 0x89, 0x90, 0x1d, 0x45, 0x4e, 0xd0, 0x65, 0x3e,
	0xea, 0xa2, 0xf4, 0x12, 0x9e, 0x6c, 0x65, 0x79, 0x92, 0x4e, 0xe9, 0x29, 0x1c, 0xa3, 0xd3, 0x35,
	0xea, 0xf3, 0xfe, 0x4b, 0xae, 0xc9, 0x15, 0x8e, 0xee, 0x00, 0x35, 0xe0, 0x9a, 0x59, 0xa1, 0x24,
	0x79, 0x86, 0xfb, 0x85, 0x9a, 0x33, 0xcb, 0x5d, 0x2c, 0x69, 0xe6, 0x1d, 0x5d, 0x20, 0x93, 0x52,
	0x0d, 0x65, 0xc8, 0xfb, 0x5c, 0x5a, 0xf2, 0x3c, 0x9f, 0x73, 0xdb, 0xd5, 0xda, 0xe8, 0xe7, 0x87,
	0xf8, 0x9c, 0x5e, 0x40, 0xc3, 0x53, 0xe5, 0x70, 0x21, 0xef, 0x84, 0xcd, 0xfa, 0x7e, 0xe1, 0x28,
	0xe3, 0x32, 0x4a, 0xfa, 0xdc, 0x18, 0xd6, 0xe5, 0xe4, 0x16, 0xbf, 0x8e, 0x43, 0x3a, 0x22, 0xe6,
	0xe4, 0x1b, 0x37, 0x2c, 0xbf, 0x53, 0xaf, 0xf8, 0x2a, 0xe4, 0x5b, 0x7a, 0x06, 0x27, 0xd8, 0xc5,
	0x03, 0x49, 0x9f, 0x47, 0x82, 0x91, 0xef, 0xf2, 0x0f, 0xc9, 0xe2, 0x38, 0xb1, 0xac, 0x4b, 0x3a,
	0x28, 0x19, 0xbf, 0x14, 0xda, 0x5d, 0x7a, 0x08, 0x07, 0x48, 0x3d, 0x1a, 0x3d, 0x74, 0xf6, 0x55,
	0x24, 0x3a, 0x6f, 0x9c, 0x2d, 0xd0, 0x8e, 0x78, 0xcc, 0x7d, 0xf0, 0x0f, 0xd7, 0xff, 0x94, 0xe1,
	0xa8, 0x28, 0x5a, 0x5a, 0x07, 0xa2, 0xf9, 0xeb, 0x21, 0x37, 0x36, 0xd1, 0xdc, 0x0c, 0x94, 0x34,
	0x28, 0x43, 0x4c, 0x13, 0x66, 0xad, 0xc3, 0x13, 0xa8, 0x0a, 0x79, 0xc7, 0x62, 0x11, 0x25, 0x56,
	0xbd, 0xe2, 0x92, 0xec, 0xe2, 0x8e, 0xb1, 0xea, 0x0a, 0x99, 0x33, 0x02, 0x38, 0x69, 0x76, 0x4e,
	0x4c, 0xc8, 0x24, 0x39, 0xc4, 0x2c, 0x16, 0x86, 0x6a, 0x28, 0x6d, 0xe2, 0x42, 0x57, 0x02, 0xcb,
	0x21, 0x14, 0xb6, 0x13, 0x98, 0xcf, 0xcb, 0xa2, 0x6a, 0xd8, 0x9e, 0x0d, 0xad, 0xf2, 0xf6, 0x31,
	0x7e, 0x9b, 0x2d, 0x91, 0x24, 0x5d, 0x6e, 0x33, 0x0d, 0x6d, 0xbb, 0x0c, 0xb7, 0x99, 0x86, 0x3e,
	0xa2, 0x1f, 0x97, 0x77, 0x8a, 0x4d, 0x73, 0x67, 0x2c, 0x8c, 0x25, 0x75, 0x1c, 0x2d, 0x47, 0x32,
	0x0a, 0xc9, 0x59, 0x11, 0xcb, 0x68, 0x24, 0x0d, 0xc7, 0xd8, 0x5a, 0x79, 0x59, 0xf6, 0x13, 0xda,
	0x00, 0x5a, 0x44, 0x7d, 0x85, 0xa0, 0x58, 0x21, 0xfb, 0xfd, 0xc8, 0xb9, 0x93, 0x65, 0xfe, 0xff,
	0x44, 0x11, 0xb9, 0x40, 0xa0, 0x28, 0xae, 0x4b, 0x54, 0x5c, 0xae, 0x03, 0xcd, 0x43, 0x2e, 0xee,
	0x38, 0xb9, 0x42, 0x3a, 0x8d, 0x65, 0x76, 0x68, 0x12, 0xa9, 0x2c, 0x56, 0x7f, 0x86, 0x9a, 0xd9,
	0xd0, 0x4b, 0x62, 0x74, 0x48, 0x9a, 0xd8, 0x74, 0x9d, 0x8e, 0x32, 0x23, 0xcf, 0xe9, 0x11, 0x3c,
	0xb6, 0xac, 0x9b, 0x8d, 0xdb, 0x46, 0x86, 0xd1, 0xca, 0x84, 0x44, 0xbe, 0x44, 0x11, 0xa1, 0x8d,
	0xe3, 0x5c, 0xe7, 0x4e, 0xbf, 0xc3, 0x57, 0xb9, 0xed, 0x19, 0xf8, 0xfa, 0xf6, 0xcf, 0x12, 0x6c,
	0x3e, 0x47, 0xb4, 0x07, 0x07, 0xfe, 0x35, 0xa2, 0x4f, 0xb7, 0xae, 0xc8, 0xc2, 0x2b, 0x75, 0xf1,
	0xd9, 0xff, 0x5c, 0xa0, 0x99, 0xbb, 0xb5, 0x43, 0x23, 0x28, 0xe3, 0x95, 0x4f, 0xcf, 0x3f, 0x08,
	0x5c, 0xbf, 0x03, 0x5b, 0x35, 0x36, 0x6f, 0xff, 0xd6, 0xce, 0x8b, 0xd2, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x46, 0x9b, 0x4e, 0x56, 0x39, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PadPlusServerClient is the client API for PadPlusServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PadPlusServerClient interface {
	Request(ctx context.Context, in *RequestObject, opts ...grpc.CallOption) (*ResponseObject, error)
	Init(ctx context.Context, in *InitConfig, opts ...grpc.CallOption) (PadPlusServer_InitClient, error)
}

type padPlusServerClient struct {
	cc *grpc.ClientConn
}

func NewPadPlusServerClient(cc *grpc.ClientConn) PadPlusServerClient {
	return &padPlusServerClient{cc}
}

func (c *padPlusServerClient) Request(ctx context.Context, in *RequestObject, opts ...grpc.CallOption) (*ResponseObject, error) {
	out := new(ResponseObject)
	err := c.cc.Invoke(ctx, "/PadPlusServer.PadPlusServer/Request", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *padPlusServerClient) Init(ctx context.Context, in *InitConfig, opts ...grpc.CallOption) (PadPlusServer_InitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PadPlusServer_serviceDesc.Streams[0], "/PadPlusServer.PadPlusServer/Init", opts...)
	if err != nil {
		return nil, err
	}
	x := &padPlusServerInitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PadPlusServer_InitClient interface {
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type padPlusServerInitClient struct {
	grpc.ClientStream
}

func (x *padPlusServerInitClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PadPlusServerServer is the server API for PadPlusServer service.
type PadPlusServerServer interface {
	Request(context.Context, *RequestObject) (*ResponseObject, error)
	Init(*InitConfig, PadPlusServer_InitServer) error
}

func RegisterPadPlusServerServer(s *grpc.Server, srv PadPlusServerServer) {
	s.RegisterService(&_PadPlusServer_serviceDesc, srv)
}

func _PadPlusServer_Request_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PadPlusServerServer).Request(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PadPlusServer.PadPlusServer/Request",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PadPlusServerServer).Request(ctx, req.(*RequestObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _PadPlusServer_Init_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(InitConfig)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PadPlusServerServer).Init(m, &padPlusServerInitServer{stream})
}

type PadPlusServer_InitServer interface {
	Send(*StreamResponse) error
	grpc.ServerStream
}

type padPlusServerInitServer struct {
	grpc.ServerStream
}

func (x *padPlusServerInitServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PadPlusServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PadPlusServer.PadPlusServer",
	HandlerType: (*PadPlusServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Request",
			Handler:    _PadPlusServer_Request_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Init",
			Handler:       _PadPlusServer_Init_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pad.proto",
}
